import{_ as e,o as i,c as r,e as o}from"./app-e7f8d9af.js";const n={},d=o('<h1 id="minmodifier" tabindex="-1"><a class="header-anchor" href="#minmodifier" aria-hidden="true">#</a> MinModifier</h1><p><a name="MinModifier"></a></p><h2 id="minmodifier-⇐-modifier" tabindex="-1"><a class="header-anchor" href="#minmodifier-⇐-modifier" aria-hidden="true">#</a> MinModifier ⇐ <code>Modifier</code></h2><p>A <code>MinModifier</code> causes die rolls under a minimum value to be treated as the minimum value.</p><p><strong>Kind</strong>: global class<br><strong>Extends</strong>: <code>Modifier</code><br><strong>See</strong>: <a href="MaxModifier">MaxModifier</a> for the opposite of this modifier<br><strong>Since</strong>: 4.3.0</p><ul><li><a href="#MinModifier">MinModifier</a> ⇐ <code>Modifier</code><ul><li><a href="#new_MinModifier_new">new MinModifier(min)</a></li><li><a href="#MinModifier+order">.order</a> : <code>number</code></li><li><a href="#MinModifier+min">.min</a> ⇒ <code>Number</code></li><li><a href="#MinModifier+min">.min</a></li><li><a href="#MinModifier+name">.name</a> ⇒ <code>string</code></li><li><a href="#MinModifier+notation">.notation</a> ⇒ <code>string</code></li><li><a href="#MinModifier+run">.run(results, _context)</a> ⇒ <code>RollResults</code></li><li><a href="#MinModifier+toJSON">.toJSON()</a> ⇒ <code>Object</code></li></ul></li></ul><p><a name="new_MinModifier_new"></a></p><h3 id="new-minmodifier-min" tabindex="-1"><a class="header-anchor" href="#new-minmodifier-min" aria-hidden="true">#</a> new MinModifier(min)</h3><p>Create a <code>MinModifier</code> instance.</p><p><strong>Throws</strong>:</p><ul><li><code>TypeError</code> min must be a number</li></ul><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>min</td><td><code>number</code></td><td>The minimum value</td></tr></tbody></table><p><a name="MinModifier+order"></a></p><h3 id="minmodifier-order-number" tabindex="-1"><a class="header-anchor" href="#minmodifier-order-number" aria-hidden="true">#</a> minModifier.order : <code>number</code></h3><p>The default modifier execution order.</p><p><strong>Kind</strong>: instance property of <a href="#MinModifier"><code>MinModifier</code></a><br><a name="MinModifier+min"></a></p><h3 id="minmodifier-min-⇒-number" tabindex="-1"><a class="header-anchor" href="#minmodifier-min-⇒-number" aria-hidden="true">#</a> minModifier.min ⇒ <code>Number</code></h3><p>The minimum value.</p><p><strong>Kind</strong>: instance property of <a href="#MinModifier"><code>MinModifier</code></a><br><a name="MinModifier+min"></a></p><h3 id="minmodifier-min" tabindex="-1"><a class="header-anchor" href="#minmodifier-min" aria-hidden="true">#</a> minModifier.min</h3><p>Set the minimum value.</p><p><strong>Kind</strong>: instance property of <a href="#MinModifier"><code>MinModifier</code></a><br><strong>Throws</strong>:</p><ul><li><code>TypeError</code> min must be a number</li></ul><table><thead><tr><th>Param</th><th>Type</th></tr></thead><tbody><tr><td>value</td><td><code>number</code></td></tr></tbody></table><p><a name="MinModifier+name"></a></p><h3 id="minmodifier-name-⇒-string" tabindex="-1"><a class="header-anchor" href="#minmodifier-name-⇒-string" aria-hidden="true">#</a> minModifier.name ⇒ <code>string</code></h3><p>The name of the modifier.</p><p><strong>Kind</strong>: instance property of <a href="#MinModifier"><code>MinModifier</code></a><br><strong>Returns</strong>: <code>string</code> - &#39;min&#39;<br><a name="MinModifier+notation"></a></p><h3 id="minmodifier-notation-⇒-string" tabindex="-1"><a class="header-anchor" href="#minmodifier-notation-⇒-string" aria-hidden="true">#</a> minModifier.notation ⇒ <code>string</code></h3><p>The modifier&#39;s notation.</p><p><strong>Kind</strong>: instance property of <a href="#MinModifier"><code>MinModifier</code></a><br><a name="MinModifier+run"></a></p><h3 id="minmodifier-run-results-context-⇒-rollresults" tabindex="-1"><a class="header-anchor" href="#minmodifier-run-results-context-⇒-rollresults" aria-hidden="true">#</a> minModifier.run(results, _context) ⇒ <code>RollResults</code></h3><p>Run the modifier on the results.</p><p><strong>Kind</strong>: instance method of <a href="#MinModifier"><code>MinModifier</code></a><br><strong>Returns</strong>: <code>RollResults</code> - The modified results</p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>results</td><td><code>RollResults</code></td><td>The results to run the modifier against</td></tr><tr><td>_context</td><td><code>StandardDice</code> | <code>RollGroup</code></td><td>The object that the modifier is attached to</td></tr></tbody></table><p><a name="MinModifier+toJSON"></a></p><h3 id="minmodifier-tojson-⇒-object" tabindex="-1"><a class="header-anchor" href="#minmodifier-tojson-⇒-object" aria-hidden="true">#</a> minModifier.toJSON() ⇒ <code>Object</code></h3><p>Return an object for JSON serialising.</p><p>This is called automatically when JSON encoding the object.</p><p><strong>Kind</strong>: instance method of <a href="#MinModifier"><code>MinModifier</code></a></p>',40),t=[d];function a(s,c){return i(),r("div",null,t)}const h=e(n,[["render",a],["__file","MinModifier.html.vue"]]);export{h as default};
