import{_ as e,o as i,c as r,e as c}from"./app-e7f8d9af.js";const t={},o=c('<h1 id="criticalsuccessmodifier" tabindex="-1"><a class="header-anchor" href="#criticalsuccessmodifier" aria-hidden="true">#</a> CriticalSuccessModifier</h1><p><a name="CriticalSuccessModifier"></a></p><h2 id="criticalsuccessmodifier-⇐-comparisonmodifier" tabindex="-1"><a class="header-anchor" href="#criticalsuccessmodifier-⇐-comparisonmodifier" aria-hidden="true">#</a> CriticalSuccessModifier ⇐ <code>ComparisonModifier</code></h2><p>A <code>CriticalSuccessModifier</code> modifier flags values that match a comparison.</p><p>Unlike most other modifiers, it doesn&#39;t affect the roll value, it simply &quot;flags&quot; matching rolls.</p><p><strong>Kind</strong>: global class<br><strong>Extends</strong>: <code>ComparisonModifier</code><br><strong>See</strong>: <a href="CriticalFailureModifier">CriticalFailureModifier</a> for the opposite of this modifier</p><ul><li><a href="#CriticalSuccessModifier">CriticalSuccessModifier</a> ⇐ <code>ComparisonModifier</code><ul><li><a href="#new_CriticalSuccessModifier_new">new CriticalSuccessModifier(comparePoint)</a></li><li><a href="#CriticalSuccessModifier+order">.order</a> : <code>number</code></li><li><a href="#CriticalSuccessModifier+name">.name</a> ⇒ <code>string</code></li><li><a href="#CriticalSuccessModifier+notation">.notation</a> ⇒ <code>string</code></li><li><a href="#CriticalSuccessModifier+defaultComparePoint">.defaultComparePoint(_context)</a> ⇒ <code>array</code></li><li><a href="#CriticalSuccessModifier+run">.run(results, _context)</a> ⇒ <code>RollResults</code></li></ul></li></ul><p><a name="new_CriticalSuccessModifier_new"></a></p><h3 id="new-criticalsuccessmodifier-comparepoint" tabindex="-1"><a class="header-anchor" href="#new-criticalsuccessmodifier-comparepoint" aria-hidden="true">#</a> new CriticalSuccessModifier(comparePoint)</h3><p>Create a <code>CriticalSuccessModifier</code> instance.</p><p><strong>Throws</strong>:</p><ul><li><code>TypeError</code> comparePoint must be a <code>ComparePoint</code> object</li></ul><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>comparePoint</td><td><code>ComparePoint</code></td><td>The comparison object</td></tr></tbody></table><p><a name="CriticalSuccessModifier+order"></a></p><h3 id="criticalsuccessmodifier-order-number" tabindex="-1"><a class="header-anchor" href="#criticalsuccessmodifier-order-number" aria-hidden="true">#</a> criticalSuccessModifier.order : <code>number</code></h3><p>The default modifier execution order.</p><p><strong>Kind</strong>: instance property of <a href="#CriticalSuccessModifier"><code>CriticalSuccessModifier</code></a><br><a name="CriticalSuccessModifier+name"></a></p><h3 id="criticalsuccessmodifier-name-⇒-string" tabindex="-1"><a class="header-anchor" href="#criticalsuccessmodifier-name-⇒-string" aria-hidden="true">#</a> criticalSuccessModifier.name ⇒ <code>string</code></h3><p>The name of the modifier.</p><p><strong>Kind</strong>: instance property of <a href="#CriticalSuccessModifier"><code>CriticalSuccessModifier</code></a><br><strong>Returns</strong>: <code>string</code> - &#39;critical-success&#39;<br><a name="CriticalSuccessModifier+notation"></a></p><h3 id="criticalsuccessmodifier-notation-⇒-string" tabindex="-1"><a class="header-anchor" href="#criticalsuccessmodifier-notation-⇒-string" aria-hidden="true">#</a> criticalSuccessModifier.notation ⇒ <code>string</code></h3><p>The modifier&#39;s notation.</p><p><strong>Kind</strong>: instance property of <a href="#CriticalSuccessModifier"><code>CriticalSuccessModifier</code></a><br><a name="CriticalSuccessModifier+defaultComparePoint"></a></p><h3 id="criticalsuccessmodifier-defaultcomparepoint-context-⇒-array" tabindex="-1"><a class="header-anchor" href="#criticalsuccessmodifier-defaultcomparepoint-context-⇒-array" aria-hidden="true">#</a> criticalSuccessModifier.defaultComparePoint(_context) ⇒ <code>array</code></h3><p>The default compare point definition</p><p><strong>Kind</strong>: instance method of <a href="#CriticalSuccessModifier"><code>CriticalSuccessModifier</code></a></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>_context</td><td><code>StandardDice</code> | <code>RollGroup</code></td><td>The object that the modifier is attached to</td></tr></tbody></table><p><a name="CriticalSuccessModifier+run"></a></p><h3 id="criticalsuccessmodifier-run-results-context-⇒-rollresults" tabindex="-1"><a class="header-anchor" href="#criticalsuccessmodifier-run-results-context-⇒-rollresults" aria-hidden="true">#</a> criticalSuccessModifier.run(results, _context) ⇒ <code>RollResults</code></h3><p>Runs the modifier on the rolls.</p><p><strong>Kind</strong>: instance method of <a href="#CriticalSuccessModifier"><code>CriticalSuccessModifier</code></a></p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>results</td><td><code>RollResults</code></td><td>The results to run the modifier against</td></tr><tr><td>_context</td><td><code>StandardDice</code> | <code>RollGroup</code></td><td>The object that the modifier is attached to</td></tr></tbody></table>',32),a=[o];function s(d,n){return i(),r("div",null,a)}const f=e(t,[["render",s],["__file","CriticalSuccessModifier.html.vue"]]);export{f as default};
