import{_ as e,o as i,c as r,e as o}from"./app-e7f8d9af.js";const t={},d=o('<h1 id="sortingmodifier" tabindex="-1"><a class="header-anchor" href="#sortingmodifier" aria-hidden="true">#</a> SortingModifier</h1><p><a name="SortingModifier"></a></p><h2 id="sortingmodifier-⇐-comparisonmodifier" tabindex="-1"><a class="header-anchor" href="#sortingmodifier-⇐-comparisonmodifier" aria-hidden="true">#</a> SortingModifier ⇐ <code>ComparisonModifier</code></h2><p>A <code>SortingModifier</code> sorts roll results by their value, either ascending or descending.</p><p><strong>Kind</strong>: global class<br><strong>Extends</strong>: <code>ComparisonModifier</code></p><ul><li><a href="#SortingModifier">SortingModifier</a> ⇐ <code>ComparisonModifier</code><ul><li><a href="#new_SortingModifier_new">new SortingModifier([direction])</a></li><li><a href="#SortingModifier+order">.order</a> : <code>number</code></li><li><a href="#SortingModifier+direction">.direction</a> ⇒ <code>string</code></li><li><a href="#SortingModifier+direction">.direction</a></li><li><a href="#SortingModifier+name">.name</a> ⇒ <code>string</code></li><li><a href="#SortingModifier+notation">.notation</a> ⇒ <code>string</code></li><li><a href="#SortingModifier+run">.run(results, _context)</a> ⇒ <code>RollResults</code></li><li><a href="#SortingModifier+toJSON">.toJSON()</a> ⇒ <code>Object</code></li></ul></li></ul><p><a name="new_SortingModifier_new"></a></p><h3 id="new-sortingmodifier-direction" tabindex="-1"><a class="header-anchor" href="#new-sortingmodifier-direction" aria-hidden="true">#</a> new SortingModifier([direction])</h3><p>Create a <code>SortingModifier</code> instance.</p><p><strong>Throws</strong>:</p><ul><li><code>RangeError</code> Direction must be &#39;a&#39; or &#39;d&#39;</li></ul><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>[direction]</td><td><code>string</code></td><td><code>&quot;a&quot;</code></td><td>The direction to sort in; &#39;a&#39; (Ascending) or &#39;d&#39; (Descending)</td></tr></tbody></table><p><a name="SortingModifier+order"></a></p><h3 id="sortingmodifier-order-number" tabindex="-1"><a class="header-anchor" href="#sortingmodifier-order-number" aria-hidden="true">#</a> sortingModifier.order : <code>number</code></h3><p>The default modifier execution order.</p><p><strong>Kind</strong>: instance property of <a href="#SortingModifier"><code>SortingModifier</code></a><br><a name="SortingModifier+direction"></a></p><h3 id="sortingmodifier-direction-⇒-string" tabindex="-1"><a class="header-anchor" href="#sortingmodifier-direction-⇒-string" aria-hidden="true">#</a> sortingModifier.direction ⇒ <code>string</code></h3><p>The sort direction.</p><p><strong>Kind</strong>: instance property of <a href="#SortingModifier"><code>SortingModifier</code></a><br><strong>Returns</strong>: <code>string</code> - Either &#39;a&#39; or &#39;d&#39;<br><a name="SortingModifier+direction"></a></p><h3 id="sortingmodifier-direction" tabindex="-1"><a class="header-anchor" href="#sortingmodifier-direction" aria-hidden="true">#</a> sortingModifier.direction</h3><p>Set the sort direction.</p><p><strong>Kind</strong>: instance property of <a href="#SortingModifier"><code>SortingModifier</code></a><br><strong>Throws</strong>:</p><ul><li><code>RangeError</code> Direction must be &#39;a&#39; or &#39;d&#39;</li></ul><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>value</td><td><code>string</code></td><td>Either &#39;a&#39; (Ascending) or &#39;d&#39; (Descending)</td></tr></tbody></table><p><a name="SortingModifier+name"></a></p><h3 id="sortingmodifier-name-⇒-string" tabindex="-1"><a class="header-anchor" href="#sortingmodifier-name-⇒-string" aria-hidden="true">#</a> sortingModifier.name ⇒ <code>string</code></h3><p>The name of the modifier.</p><p><strong>Kind</strong>: instance property of <a href="#SortingModifier"><code>SortingModifier</code></a><br><strong>Returns</strong>: <code>string</code> - &#39;sorting&#39;<br><a name="SortingModifier+notation"></a></p><h3 id="sortingmodifier-notation-⇒-string" tabindex="-1"><a class="header-anchor" href="#sortingmodifier-notation-⇒-string" aria-hidden="true">#</a> sortingModifier.notation ⇒ <code>string</code></h3><p>The modifier&#39;s notation.</p><p><strong>Kind</strong>: instance property of <a href="#SortingModifier"><code>SortingModifier</code></a><br><a name="SortingModifier+run"></a></p><h3 id="sortingmodifier-run-results-context-⇒-rollresults" tabindex="-1"><a class="header-anchor" href="#sortingmodifier-run-results-context-⇒-rollresults" aria-hidden="true">#</a> sortingModifier.run(results, _context) ⇒ <code>RollResults</code></h3><p>Run the modifier on the results.</p><p><strong>Kind</strong>: instance method of <a href="#SortingModifier"><code>SortingModifier</code></a><br><strong>Returns</strong>: <code>RollResults</code> - The modified results</p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>results</td><td><code>RollResults</code></td><td>The results to run the modifier against</td></tr><tr><td>_context</td><td><code>StandardDice</code> | <code>RollGroup</code></td><td>The object that the modifier is attached to</td></tr></tbody></table><p><a name="SortingModifier+toJSON"></a></p><h3 id="sortingmodifier-tojson-⇒-object" tabindex="-1"><a class="header-anchor" href="#sortingmodifier-tojson-⇒-object" aria-hidden="true">#</a> sortingModifier.toJSON() ⇒ <code>Object</code></h3><p>Return an object for JSON serialising.</p><p>This is called automatically when JSON encoding the object.</p><p><strong>Kind</strong>: instance method of <a href="#SortingModifier"><code>SortingModifier</code></a></p>',40),n=[d];function a(s,c){return i(),r("div",null,n)}const g=e(t,[["render",a],["__file","SortingModifier.html.vue"]]);export{g as default};
