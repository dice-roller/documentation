import{_ as n,o as s,c as a,e}from"./app-e7f8d9af.js";const o={},t=e(`<h1 id="rollgroup" tabindex="-1"><a class="header-anchor" href="#rollgroup" aria-hidden="true">#</a> RollGroup</h1><p><a name="RollGroup"></a></p><h2 id="rollgroup-1" tabindex="-1"><a class="header-anchor" href="#rollgroup-1" aria-hidden="true">#</a> RollGroup</h2><p>A <code>RollGroup</code> is a group of one or more &quot;sub-rolls&quot;.</p><p>A sub-roll is just simple roll notation (e.g. <code>4d6</code>, <code>2d10*3</code>, <code>5/10d20</code>)</p><p><strong>Kind</strong>: global class<br><strong>Since</strong>: 4.5.0</p><ul><li><a href="#RollGroup">RollGroup</a><ul><li><a href="#new_RollGroup_new">new RollGroup([expressions], [modifiers], [description])</a></li><li><a href="#RollGroup+expressions">.expressions</a> ⇒ <code>Array.&lt;Array.&lt;(StandardDice|string|number)&gt;&gt;</code></li><li><a href="#RollGroup+expressions">.expressions</a></li><li><a href="#RollGroup+modifiers">.modifiers</a> ⇒ <code>Map.&lt;string, Modifier&gt;</code> | <code>null</code></li><li><a href="#RollGroup+modifiers">.modifiers</a></li><li><a href="#RollGroup+notation">.notation</a> ⇒ <code>string</code></li><li><a href="#RollGroup+roll">.roll()</a> ⇒ <code>ResultGroup</code></li><li><a href="#RollGroup+toJSON">.toJSON()</a> ⇒ <code>Object</code></li><li><a href="#RollGroup+toString">.toString()</a> ⇒ <code>string</code></li></ul></li></ul><p><a name="new_RollGroup_new"></a></p><h3 id="new-rollgroup-expressions-modifiers-description" tabindex="-1"><a class="header-anchor" href="#new-rollgroup-expressions-modifiers-description" aria-hidden="true">#</a> new RollGroup([expressions], [modifiers], [description])</h3><p>Create a <code>RollGroup</code> instance.</p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>[expressions]</td><td><code>Array.&lt;Array.&lt;(StandardDice|string|number)&gt;&gt;</code></td><td><code>[]</code></td><td>List of sub-rolls</td></tr><tr><td>[modifiers]</td><td><code>Map.&lt;string, Modifier&gt;</code> | <code>Array.&lt;Modifier&gt;</code> | <code>Object</code> | <code>null</code></td><td><code>[]</code></td><td>The modifiers that affect the group</td></tr><tr><td>[description]</td><td><code>Description</code> | <code>string</code> | <code>null</code></td><td><code></code></td><td>The roll description.</td></tr></tbody></table><p><strong>Example</strong> <em>(\`{4d6+4, 2d%/5}k1\`)</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> expressions <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">StandardDice</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;+&#39;</span><span class="token punctuation">,</span>
    <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">PercentileDice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
    <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> modifiers <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token keyword">new</span> <span class="token class-name">KeepModifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RollGroup</span><span class="token punctuation">(</span>expressions<span class="token punctuation">,</span> modifiers<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="RollGroup+expressions"></a></p><h3 id="rollgroup-expressions-⇒-array-array-standarddice-string-number" tabindex="-1"><a class="header-anchor" href="#rollgroup-expressions-⇒-array-array-standarddice-string-number" aria-hidden="true">#</a> rollGroup.expressions ⇒ <code>Array.&lt;Array.&lt;(StandardDice|string|number)&gt;&gt;</code></h3><p>The sub-roll expressions in the group.</p><p><strong>Kind</strong>: instance property of <a href="#RollGroup"><code>RollGroup</code></a><br><a name="RollGroup+expressions"></a></p><h3 id="rollgroup-expressions" tabindex="-1"><a class="header-anchor" href="#rollgroup-expressions" aria-hidden="true">#</a> rollGroup.expressions</h3><p>Set the sub-roll expressions in the group.</p><p><strong>Kind</strong>: instance property of <a href="#RollGroup"><code>RollGroup</code></a><br><strong>Throws</strong>:</p><ul><li><code>TypeError</code> Expressions must be an array of arrays</li><li><code>TypeError</code> Sub expressions cannot be empty</li><li><code>TypeError</code> Sub expression items must be Dice, numbers, or strings</li></ul><table><thead><tr><th>Param</th><th>Type</th></tr></thead><tbody><tr><td>expressions</td><td><code>Array.&lt;Array.&lt;(StandardDice|string|number)&gt;&gt;</code></td></tr></tbody></table><p><a name="RollGroup+modifiers"></a></p><h3 id="rollgroup-modifiers-⇒-map-string-modifier-null" tabindex="-1"><a class="header-anchor" href="#rollgroup-modifiers-⇒-map-string-modifier-null" aria-hidden="true">#</a> rollGroup.modifiers ⇒ <code>Map.&lt;string, Modifier&gt;</code> | <code>null</code></h3><p>The modifiers that affect the object.</p><p><strong>Kind</strong>: instance property of <a href="#RollGroup"><code>RollGroup</code></a><br><a name="RollGroup+modifiers"></a></p><h3 id="rollgroup-modifiers" tabindex="-1"><a class="header-anchor" href="#rollgroup-modifiers" aria-hidden="true">#</a> rollGroup.modifiers</h3><p>Set the modifiers that affect this group.</p><p><strong>Kind</strong>: instance property of <a href="#RollGroup"><code>RollGroup</code></a><br><strong>Throws</strong>:</p><ul><li><code>TypeError</code> Modifiers should be a Map, array of Modifiers, or an Object</li></ul><table><thead><tr><th>Param</th><th>Type</th></tr></thead><tbody><tr><td>value</td><td><code>Map.&lt;string, Modifier&gt;</code> | <code>Array.&lt;Modifier&gt;</code> | <code>Object</code> | <code>null</code></td></tr></tbody></table><p><a name="RollGroup+notation"></a></p><h3 id="rollgroup-notation-⇒-string" tabindex="-1"><a class="header-anchor" href="#rollgroup-notation-⇒-string" aria-hidden="true">#</a> rollGroup.notation ⇒ <code>string</code></h3><p>The group notation. e.g. <code>{4d6, 2d10+3}k1</code>.</p><p><strong>Kind</strong>: instance property of <a href="#RollGroup"><code>RollGroup</code></a><br><a name="RollGroup+roll"></a></p><h3 id="rollgroup-roll-⇒-resultgroup" tabindex="-1"><a class="header-anchor" href="#rollgroup-roll-⇒-resultgroup" aria-hidden="true">#</a> rollGroup.roll() ⇒ <code>ResultGroup</code></h3><p>Run the sub-roll expressions for the group.</p><p><strong>Kind</strong>: instance method of <a href="#RollGroup"><code>RollGroup</code></a><br><strong>Returns</strong>: <code>ResultGroup</code> - The results of the sub-rolls<br><strong>Example</strong> <em>(\`{4d6+4/1d6, 2d10/3}k1\`)</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>ResultGroup <span class="token punctuation">{</span>
  <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// sub-roll 1 - 4d6+4/1d6</span>
    ResultGroup <span class="token punctuation">{</span>
      <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        RollResults <span class="token punctuation">{</span>
          <span class="token literal-property property">rolls</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            RollResult <span class="token punctuation">{</span>
              <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            RollResult <span class="token punctuation">{</span>
              <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">5</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            RollResult <span class="token punctuation">{</span>
              <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">4</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            RollResult <span class="token punctuation">{</span>
              <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&#39;+&#39;</span><span class="token punctuation">,</span>
        <span class="token number">4</span><span class="token punctuation">,</span>
        <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
        RollResults <span class="token punctuation">{</span>
          <span class="token literal-property property">rolls</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            RollResult <span class="token punctuation">{</span>
              <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">4</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// sub-roll 2 - 2d10/3</span>
    ResultGroup <span class="token punctuation">{</span>
      <span class="token literal-property property">results</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        RollResults <span class="token punctuation">{</span>
          <span class="token literal-property property">rolls</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            RollResults <span class="token punctuation">{</span>
              <span class="token number">4</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            RollResults <span class="token punctuation">{</span>
              <span class="token number">9</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">]</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
        <span class="token number">3</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="RollGroup+toJSON"></a></p><h3 id="rollgroup-tojson-⇒-object" tabindex="-1"><a class="header-anchor" href="#rollgroup-tojson-⇒-object" aria-hidden="true">#</a> rollGroup.toJSON() ⇒ <code>Object</code></h3><p>Return an object for JSON serialising.</p><p>This is called automatically when JSON encoding the object.</p><p><strong>Kind</strong>: instance method of <a href="#RollGroup"><code>RollGroup</code></a><br><a name="RollGroup+toString"></a></p><h3 id="rollgroup-tostring-⇒-string" tabindex="-1"><a class="header-anchor" href="#rollgroup-tostring-⇒-string" aria-hidden="true">#</a> rollGroup.toString() ⇒ <code>string</code></h3><p>Return the String representation of the object.</p><p>This is called automatically when casting the object to a string.</p><p><strong>Kind</strong>: instance method of <a href="#RollGroup"><code>RollGroup</code></a><br><strong>See</strong>: <a href="#RollGroup+notation">notation</a></p>`,48),r=[t];function l(p,i){return s(),a("div",null,r)}const d=n(o,[["render",l],["__file","RollGroup.html.vue"]]);export{d as default};
