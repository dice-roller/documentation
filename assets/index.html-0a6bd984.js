import{_ as r,r as a,o as l,c as d,a as e,d as t,b as n,w as h,e as o}from"./app-e7f8d9af.js";const c={},u=e("h1",{id:"contributing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contributing","aria-hidden":"true"},"#"),t(" Contributing")],-1),p=e("p",null,"Thanks for helping out with the dice roller!",-1),g=e("p",null,"The following is a set of guidelines for contributing to the library. They explain the process to get started, and ensure that it's as easy as possible for people to work with the project.",-1),f=e("h2",{id:"code-of-conduct",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#code-of-conduct","aria-hidden":"true"},"#"),t(" Code of Conduct")],-1),b=e("h2",{id:"i-have-a-question",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#i-have-a-question","aria-hidden":"true"},"#"),t(" I have a question")],-1),m={href:"https://github.com/dice-roller/rpg-dice-roller/discussions",target:"_blank",rel:"noopener noreferrer"},v=o('<h2 id="how-to-contribute" tabindex="-1"><a class="header-anchor" href="#how-to-contribute" aria-hidden="true">#</a> How to contribute</h2><h3 id="reporting-bugs" tabindex="-1"><a class="header-anchor" href="#reporting-bugs" aria-hidden="true">#</a> Reporting bugs</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Before raising a ticket, please check it hasn&#39;t already been raised!</p></div><p>If you find a bug, please let us know.</p><h4 id="before-submitting-a-bug-report" tabindex="-1"><a class="header-anchor" href="#before-submitting-a-bug-report" aria-hidden="true">#</a> Before submitting a bug report</h4>',5),y={href:"https://github.com/dice-roller/rpg-dice-roller/issues?q=is%3Aissue+label%3Abug",target:"_blank",rel:"noopener noreferrer"},_=e("ul",null,[e("li",null,[t("If it has, and the issue is still "),e("em",null,"open"),t(", add a comment to it, rather than creating a new ticket.")]),e("li",null,[t("If it has, and the issue is "),e("em",null,"closed"),t(", see if any suggested fix resolves the issue for you.")])],-1),w=e("h4",{id:"how-to-submit-a-bug-report",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-to-submit-a-bug-report","aria-hidden":"true"},"#"),t(" How to submit a bug report")],-1),k={href:"https://github.com/dice-roller/rpg-dice-roller/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},x=e("p",null,"Explain the problem in as much detail as possible, including any additional details that could help to reproduce the problem.",-1),I=e("li",null,[e("strong",null,"Use a clear and descriptive title"),t(" for the issue, that identifies the problem.")],-1),q=e("li",null,[e("strong",null,"Describe the exact steps which reproduce the problem"),t(" with as much detail as possible.")],-1),A=e("strong",null,"Provide specific examples to demonstrate the steps.",-1),S={href:"https://help.github.com/en/github/writing-on-github/creating-and-highlighting-code-blocks",target:"_blank",rel:"noopener noreferrer"},T=o("<li><strong>Describe the behaviour that you observed after following the steps</strong> and explain why this is a problem.</li><li><strong>Describe the behaviour that you expected to see and why.</strong></li><li><strong>Include any screenshots</strong> if relevant.</li><li><strong>If you receive any error messages</strong>, <code>console</code> output, or similar, please include them.</li><li><strong>Provide the library version number</strong> that you&#39;re using. If it&#39;s not the latest version, can you reproduce the problem in the latest release?</li>",5),C=e("h3",{id:"suggesting-improvements-and-new-features",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#suggesting-improvements-and-new-features","aria-hidden":"true"},"#"),t(" Suggesting improvements and new features")],-1),E=e("p",null,"We'd love to hear any ideas you've got for new features or improvements. Following these guidelines helps us to understand your suggestion better.",-1),j=e("h4",{id:"before-submitting-a-feature-suggestion",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#before-submitting-a-feature-suggestion","aria-hidden":"true"},"#"),t(" Before submitting a feature suggestion")],-1),B=e("li",null,[e("strong",null,"Check you're using the latest version."),t(" The feature may have been added in a newer version.")],-1),G={href:"https://github.com/dice-roller/rpg-dice-roller/issues?q=is%3Aissue+label%3Aenhancement,suggestion,question",target:"_blank",rel:"noopener noreferrer"},W=e("h4",{id:"how-to-submit-a-feature-suggestion",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-to-submit-a-feature-suggestion","aria-hidden":"true"},"#"),t(" How to submit a feature suggestion")],-1),P={href:"https://github.com/dice-roller/rpg-dice-roller/issues/new/choose",target:"_blank",rel:"noopener noreferrer"},D=o('<ul><li><strong>Use a clear and descriptive title</strong> for the ticket, that identifies the suggestion.</li><li><strong>Provide a step-by-step description of the feature</strong> with as much detail as possible.</li><li><strong>Provide any relevant examples to demonstrate the feature</strong>, such as code snippets.</li><li><strong>Describe the current behaviour</strong> and <strong>explain the behaviour you&#39;d like to see instead</strong> and why.</li><li><strong>Include any screenshots</strong> if relevant.</li><li><strong>Explain why the feature would be useful</strong></li></ul><h3 id="contributing-code" tabindex="-1"><a class="header-anchor" href="#contributing-code" aria-hidden="true">#</a> Contributing code</h3><p>If you want to help out with the development itself then please dive in.</p><h4 id="finding-something-to-work-on" tabindex="-1"><a class="header-anchor" href="#finding-something-to-work-on" aria-hidden="true">#</a> Finding something to work on</h4>',4),H={href:"https://github.com/dice-roller/rpg-dice-roller/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22,%22good+first+issue%22",target:"_blank",rel:"noopener noreferrer"},J=e("p",null,"If there aren't any flagged as with either label, that doesn't mean we don't want your help! Generally, we're happy for people to dig into any ticket that hasn't been assigned to someone. A ticket that has been assigned means that someone else is working on it.",-1),N=e("p",null,"So have a look around the open tickets and see if you feel as though you can help with any of them.",-1),U=e("p",null,[t("If you've got an idea for a feature, but there isn't a ticket for it, feel free to "),e("a",{href:"#suggesting-improvements-and-new-features"},"create one"),t(" and assign it to yourself. This way, it's easier to keep track on what is being worked on, and we can try to ensure that multiple people aren't unknowingly working on the same thing.")],-1),L=e("h4",{id:"setting-up",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setting-up","aria-hidden":"true"},"#"),t(" Setting up")],-1),Y={href:"https://github.com/dice-roller/rpg-dice-roller",target:"_blank",rel:"noopener noreferrer"},M=o(`<p>Make sure that you check out the <code>develop</code> branch, or create a <code>feature</code> / <code>hotfix</code> branch for the task you&#39;re working on, and <em>not</em> the <code>main</code> branch.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>You should <strong>never</strong> work directly on the <code>main</code> branch. You should work on either the <code>develop</code> branch or a <code>feature</code> branch.</p><p>See the <a href="#branching-model">Branching model</a> section for more information.</p></div><h4 id="file-structure" tabindex="-1"><a class="header-anchor" href="#file-structure" aria-hidden="true">#</a> File structure</h4><p>The project file structure is split up into logical groups:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/
|- demo/
|- lib/
   |- esm/
   |- umd/
|- src/
|- tests/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>root</code> contains mostly meta files, such as the <code>.babelrc</code>, <code>eslintrc.json</code>. <code>rollup.config.js</code> and other files used for the generation of the library.</p></li><li><p><code>lib</code> contains the compiled Javascript files, in both EcmaScript and UMD versions, in the <code>esm</code> and <code>umd</code> directories respectively.</p><p>Do <strong>not</strong> manually change the files in this directory as any changes will be overwritten.</p></li><li><p><code>src</code> is where the magic happens. This contains all the source Javascript ES modules that get compiled into the <code>lib</code> directory. It is these files that you should modify.</p></li><li><p><code>tests</code> contain <a href="#testing-your-code">Jest tests</a>. If you make changes to the source code, you should update / add tests to cover the changes.</p></li></ul><h4 id="compiling-and-building-the-code" tabindex="-1"><a class="header-anchor" href="#compiling-and-building-the-code" aria-hidden="true">#</a> Compiling and building the code</h4><p>If you want to see what how your code functions, you&#39;ll need to compile the source code to the <code>lib</code> directory. There are several ways of doing this, depending on the required outcome.</p><p>There are several scripts to help:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># compile compressed / minified the ES and UMD files</span>
<span class="token function">npm</span> run build

<span class="token comment"># compile un-compressed version of the ES and UMD files</span>
<span class="token function">npm</span> run build:dev

<span class="token comment"># watch the \`src\` directory for changes and compile un-compressed ES files on change</span>
<span class="token function">npm</span> run <span class="token function">watch</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="testing-your-code" tabindex="-1"><a class="header-anchor" href="#testing-your-code" aria-hidden="true">#</a> Testing your code</h4><p>We utilise both a <a href="#javaScript-style-guide">JavaScript linter</a> and a <a href="#testing">testing framework</a> to ensure that all code conforms to certain standards and any new code doesn&#39;t break existing code, or otherwise behave unexpectedly.</p><p>You do <strong>not</strong> need to build / compile the code before linting or testing. Both the linter and tests run on the original source code.</p><p><strong>All code must pass both the linter and the tests.</strong> You can read more about them in the <a href="#styles-and-standards">Styles and standards</a> section.</p><h3 id="pull-requests" tabindex="-1"><a class="header-anchor" href="#pull-requests" aria-hidden="true">#</a> Pull requests</h3><p>When creating a pull request, there are several things that need to be considered, to ensure that the quality of the library is kept, and that the code remains readable and manageable</p><p>Please follow these steps so that your pull request can be considered by the maintainers:</p>`,17),R=e("li",null,[t("Ensure all "),e("a",{href:"#testing"},"tests"),t(" pass locally before creating a pull request. If they do not, explain the reason in description of the pull request.")],-1),F=e("li",null,"If the pull request relates to a ticket, ensure that the ticket number is referenced in the description of the pull request.",-1),V=e("li",null,"Provide a description of what the pull request is trying to achieve. If there is a related ticket, then the description can be brief. Otherwise, please provide enough detail for the reviewer to understand what bug it fixes, or feature it implements, and why.",-1),O=e("li",null,[t("Follow the "),e("a",{href:"#styles-and-standards"},"style guides"),t(".")],-1),z={href:"https://help.github.com/articles/about-status-checks/",target:"_blank",rel:"noopener noreferrer"},K=o('<div class="custom-container tip"><p class="custom-container-title">What if the tests / status checks are failing?</p><p>Check what is failing. If you believe that the failure is unrelated to your change, please leave a comment on the pull request explaining why you believe the failure is unrelated. A maintainer can re-run the status checks and determine if it&#39;s a false positive, or otherwise unrelated to your changes.</p></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>You should <strong>never</strong> work directly on the <code>main</code> branch. Any pull requests on to <code>main</code> will, unfortunately, have to be rejected, and you&#39;ll have to re-create it on <code>develop</code>.</p><p>See the <a href="#branching-model">Branching model</a> section for more information.</p></div><h2 id="styles-and-standards" tabindex="-1"><a class="header-anchor" href="#styles-and-standards" aria-hidden="true">#</a> Styles and standards</h2><h3 id="git" tabindex="-1"><a class="header-anchor" href="#git" aria-hidden="true">#</a> Git</h3><h4 id="branching-model" tabindex="-1"><a class="header-anchor" href="#branching-model" aria-hidden="true">#</a> Branching model</h4>',5),Q={href:"https://nvie.com/posts/a-successful-git-branching-model/",target:"_blank",rel:"noopener noreferrer"},X=e("code",null,"main",-1),Z=e("code",null,"develop",-1),$=o('<ul><li>The <code>main</code> branch is the current latest release, and should <em>only be modified when making a release</em>.</li><li>The <code>develop</code> branch is where all the fun happens, and where we can work and make our changes (Although these should generally be done on a feature branch).</li></ul><h4 id="commit-messages" tabindex="-1"><a class="header-anchor" href="#commit-messages" aria-hidden="true">#</a> Commit messages</h4><ul><li>Use the present tense (e.g. &quot;Add feature&quot; not &quot;Added feature&quot;).</li><li>Use the imperative mood (e.g. &quot;Enhance fudge die rolls&quot; not &quot;Enhances fudge die rolls&quot;).</li><li>Limit the first line to 72 characters or fewer.</li><li>Reference relevant ticket numbers after the first line.</li></ul><h3 id="javascript-style-guide" tabindex="-1"><a class="header-anchor" href="#javascript-style-guide" aria-hidden="true">#</a> JavaScript style guide</h3>',4),ee={href:"https://airbnb.io/javascript/",target:"_blank",rel:"noopener noreferrer"},te={href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},ne=o(`<p>You can check if the code conforms to the standards by running the following in the console:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run lint
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>If there are problems, it will show you the files and line numbers for each issue.</p><h3 id="testing" tabindex="-1"><a class="header-anchor" href="#testing" aria-hidden="true">#</a> Testing</h3>`,4),se={href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"},oe=e("code",null,"/tests",-1),ae=o(`<p>When writing tests, ensure that they are thoughtfully-worded, and well-structured, so that it is both easy to understand and maintain.</p><p>You can check if the code passes all the tests by running the following in the console:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This runs the <a href="#javaScript-style-guide">JavaScript Linter</a> first, and then the tests, so if the linter fails, then the tests will not be run.</p><h3 id="use-of-ai" tabindex="-1"><a class="header-anchor" href="#use-of-ai" aria-hidden="true">#</a> Use of AI</h3><p>With the rise of AI, such as ChatGPT, being used to write code, it is important that we stress that such services are more often than not, completely inaccurate, and introduce bugs and unintended behaviour.</p><p>It also leads to some ambiguous copyright issues, whereby it is uncertain who owns the copyright for the generated code.</p><p>Moderating such content is very time-consuming, often for very little ultimate gain.</p>`,8),ie={href:"https://github.com/dice-roller/rpg-dice-roller/issues?q=label%3A%22is+bot%22+",target:"_blank",rel:"noopener noreferrer"},re=e("p",null,"At the discretion of the maintainers, the content may also be rejected / removed.",-1);function le(de,he){const i=a("RouterLink"),s=a("ExternalLinkIcon");return l(),d("div",null,[u,p,g,f,e("p",null,[t("Check out our "),n(i,{to:"/contributing/code-of-conduct.html"},{default:h(()=>[t("Code of Conduct")]),_:1}),t(".")]),b,e("p",null,[t("Please use the "),e("a",m,[t("GitHub discussion board"),n(s)]),t(" to raise questions.")]),v,e("ul",null,[e("li",null,[e("a",y,[t("Search through existing tickets"),n(s)]),t(" to see if the issue has already been reported. "),_])]),w,e("p",null,[t("Bugs are tracked as GitHub issues, and you can "),e("a",k,[t("report a bug through GitHub"),n(s)]),t(".")]),x,e("ul",null,[I,q,e("li",null,[A,t(" Include links to source code, or copy/paste code snippets. If providing code snippets, please use "),e("a",S,[t("Markdown code blocks"),n(s)]),t(".")]),T]),C,E,j,e("ul",null,[B,e("li",null,[e("a",G,[t("Search through existing tickets"),n(s)]),t(" to see if the feature has already been suggested. If it has, add a comment to the existing one, rather than creating a new one.")])]),W,e("p",null,[t("Feature suggestions are tracked as GitHub tickets, and you can "),e("a",P,[t("suggest a feature through GitHub"),n(s)]),t(".")]),D,e("p",null,[t("If you're unsure where to begin, you can start by having a look at the tickets flagged as "),e("a",H,[t('"help wanted" or "good first issue"'),n(s)]),t(", and see if you can help with any of them.")]),J,N,U,L,e("p",null,[t("The code is stored in a Git repository. To get started either "),e("a",Y,[t("clone or fork the repository"),n(s)]),t(".")]),M,e("ul",null,[R,F,V,O,e("li",null,[t("After submitting your pull request, verify that all "),e("a",z,[t("status checks"),n(s)]),t(" are passing.")])]),K,e("p",null,[t("We use the "),e("a",Q,[t("git-flow branching model"),n(s)]),t(". This means that there is always a "),X,t(" branch and a "),Z,t(" branch, and there may be other branches that follow the git-flow naming conventions.")]),$,e("p",null,[t("All JavaScript must adhere to the "),e("a",ee,[t("Airbnb standard style"),n(s)]),t(". This is to make sure that the code is readable and more maintainable for everyone.")]),e("p",null,[t("We use "),e("a",te,[t("ESLint"),n(s)]),t(" to ensure that the syntax is correct and meets the standards.")]),ne,e("p",null,[t("We use "),e("a",se,[t("Jest"),n(s)]),t(" to test the library. The tests can be found in the "),oe,t(" directory.")]),ae,e("p",null,[t("If you are using AI to generate any content, please tag the content as "),e("a",ie,[t('"is bot"'),n(s)]),t(". Any content suspected of being generated by a bot / AI will be tagged as such.")]),re])}const ue=r(c,[["render",le],["__file","index.html.vue"]]);export{ue as default};
