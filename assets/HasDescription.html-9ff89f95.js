import{_ as e,o as i,c as t,e as s}from"./app-e7f8d9af.js";const o={},a=s('<h1 id="hasdescription" tabindex="-1"><a class="header-anchor" href="#hasdescription" aria-hidden="true">#</a> HasDescription</h1><p><a name="HasDescription"></a></p><h2 id="hasdescription-1" tabindex="-1"><a class="header-anchor" href="#hasdescription-1" aria-hidden="true">#</a> <em>HasDescription</em></h2><div class="custom-container warning"><p class="custom-container-title">Abstract class</p><p>This is an abstract class and should not be used directly. You should use one of the extended classes, or extend the class yourself.</p></div><p>A base class for description functionality.</p><p><strong>Kind</strong>: global abstract class</p><ul><li><em><a href="#HasDescription">HasDescription</a></em><ul><li><em><a href="#HasDescription+description">.description</a> ⇒ <code>Description</code> | <code>null</code></em></li><li><em><a href="#HasDescription+description">.description</a></em></li><li><em><a href="#HasDescription+toJSON">.toJSON()</a> ⇒ <code>Object</code></em></li><li><em><a href="#HasDescription+toString">.toString()</a> ⇒ <code>string</code></em></li></ul></li></ul><p><a name="HasDescription+description"></a></p><h3 id="hasdescription-description-⇒-description-null" tabindex="-1"><a class="header-anchor" href="#hasdescription-description-⇒-description-null" aria-hidden="true">#</a> <em>hasDescription.description ⇒ <code>Description</code> | <code>null</code></em></h3><p>The description for the group.</p><p><strong>Kind</strong>: instance property of <a href="#HasDescription"><code>HasDescription</code></a><br><a name="HasDescription+description"></a></p><h3 id="hasdescription-description" tabindex="-1"><a class="header-anchor" href="#hasdescription-description" aria-hidden="true">#</a> <em>hasDescription.description</em></h3><p>Set the description on the group.</p><p><strong>Kind</strong>: instance property of <a href="#HasDescription"><code>HasDescription</code></a></p><table><thead><tr><th>Param</th><th>Type</th></tr></thead><tbody><tr><td>description</td><td><code>Description</code> | <code>string</code> | <code>null</code></td></tr></tbody></table><p><a name="HasDescription+toJSON"></a></p><h3 id="hasdescription-tojson-⇒-object" tabindex="-1"><a class="header-anchor" href="#hasdescription-tojson-⇒-object" aria-hidden="true">#</a> <em>hasDescription.toJSON() ⇒ <code>Object</code></em></h3><p>Return an object for JSON serialising.</p><p>This is called automatically when JSON encoding the object.</p><p><strong>Kind</strong>: instance method of <a href="#HasDescription"><code>HasDescription</code></a><br><a name="HasDescription+toString"></a></p><h3 id="hasdescription-tostring-⇒-string" tabindex="-1"><a class="header-anchor" href="#hasdescription-tostring-⇒-string" aria-hidden="true">#</a> <em>hasDescription.toString() ⇒ <code>string</code></em></h3><p>Return the String representation of the object.</p><p>This is called automatically when casting the object to a string.</p><p><strong>Kind</strong>: instance method of <a href="#HasDescription"><code>HasDescription</code></a><br><strong>See</strong>: <a href="RollGroup#notation">RollGroup#notation</a></p>',24),n=[a];function r(c,d){return i(),t("div",null,n)}const h=e(o,[["render",r],["__file","HasDescription.html.vue"]]);export{h as default};
