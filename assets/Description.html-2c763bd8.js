import{_ as t,o as e,c as i,e as r}from"./app-e7f8d9af.js";const o={},n=r('<h1 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h1><p><a name="Description"></a></p><h2 id="description-1" tabindex="-1"><a class="header-anchor" href="#description-1" aria-hidden="true">#</a> Description</h2><p>Represents a Roll / Roll group description.</p><p><strong>Kind</strong>: global class</p><ul><li><a href="#Description">Description</a><ul><li><a href="#new_Description_new">new Description(text, [type])</a></li><li><a href="#Description+text">.text</a> ⇒ <code>string</code></li><li><a href="#Description+text">.text</a></li><li><a href="#Description+type">.type</a> ⇒ <code>string</code></li><li><a href="#Description+type">.type</a></li><li><a href="#Description+toJSON">.toJSON()</a> ⇒ <code>Object</code></li><li><a href="#Description+toString">.toString()</a> ⇒ <code>string</code></li></ul></li></ul><p><a name="new_Description_new"></a></p><h3 id="new-description-text-type" tabindex="-1"><a class="header-anchor" href="#new-description-text-type" aria-hidden="true">#</a> new Description(text, [type])</h3><p>Create a <code>Description</code> instance.</p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>text</td><td><code>string</code></td><td></td></tr><tr><td>[type]</td><td><code>string</code></td><td><code>&quot;inline&quot;</code></td></tr></tbody></table><p><a name="Description+text"></a></p><h3 id="description-text-⇒-string" tabindex="-1"><a class="header-anchor" href="#description-text-⇒-string" aria-hidden="true">#</a> description.text ⇒ <code>string</code></h3><p>The description text.</p><p><strong>Kind</strong>: instance property of <a href="#Description"><code>Description</code></a><br><a name="Description+text"></a></p><h3 id="description-text" tabindex="-1"><a class="header-anchor" href="#description-text" aria-hidden="true">#</a> description.text</h3><p>Set the description text.</p><p><strong>Kind</strong>: instance property of <a href="#Description"><code>Description</code></a></p><table><thead><tr><th>Param</th><th>Type</th></tr></thead><tbody><tr><td>text</td><td><code>string</code> | <code>number</code></td></tr></tbody></table><p><a name="Description+type"></a></p><h3 id="description-type-⇒-string" tabindex="-1"><a class="header-anchor" href="#description-type-⇒-string" aria-hidden="true">#</a> description.type ⇒ <code>string</code></h3><p>The description type.</p><p><strong>Kind</strong>: instance property of <a href="#Description"><code>Description</code></a><br><strong>Returns</strong>: <code>string</code> - &quot;inline&quot; or &quot;multiline&quot;<br><a name="Description+type"></a></p><h3 id="description-type" tabindex="-1"><a class="header-anchor" href="#description-type" aria-hidden="true">#</a> description.type</h3><p>Set the description type.</p><p><strong>Kind</strong>: instance property of <a href="#Description"><code>Description</code></a></p><table><thead><tr><th>Param</th><th>Type</th></tr></thead><tbody><tr><td>type</td><td><code>string</code></td></tr></tbody></table><p><a name="Description+toJSON"></a></p><h3 id="description-tojson-⇒-object" tabindex="-1"><a class="header-anchor" href="#description-tojson-⇒-object" aria-hidden="true">#</a> description.toJSON() ⇒ <code>Object</code></h3><p>Return an object for JSON serialising.</p><p>This is called automatically when JSON encoding the object.</p><p><strong>Kind</strong>: instance method of <a href="#Description"><code>Description</code></a><br><a name="Description+toString"></a></p><h3 id="description-tostring-⇒-string" tabindex="-1"><a class="header-anchor" href="#description-tostring-⇒-string" aria-hidden="true">#</a> description.toString() ⇒ <code>string</code></h3><p>Return the String representation of the object.</p><p>This is called automatically when casting the object to a string.</p><p><strong>Kind</strong>: instance method of <a href="#Description"><code>Description</code></a><br><strong>See</strong>: <a href="#Description+text">text</a></p>',35),a=[n];function d(c,s){return e(),i("div",null,a)}const h=t(o,[["render",d],["__file","Description.html.vue"]]);export{h as default};
