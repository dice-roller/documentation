import{_ as s,o as e,c as l,e as a}from"./app-e7f8d9af.js";const n={},t=a(`<h1 id="rollresults" tabindex="-1"><a class="header-anchor" href="#rollresults" aria-hidden="true">#</a> RollResults</h1><p><a name="RollResults"></a></p><h2 id="rollresults-1" tabindex="-1"><a class="header-anchor" href="#rollresults-1" aria-hidden="true">#</a> RollResults</h2><p>A collection of die roll results</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>You will probably not need to create your own <code>RollResults</code> instances, unless you&#39;re importing rolls, but RollResults objects will be returned when rolling dice.</p></div><p><strong>Kind</strong>: global class</p><ul><li><a href="#RollResults">RollResults</a><ul><li><a href="#new_RollResults_new">new RollResults([rolls])</a></li><li><a href="#RollResults+length">.length</a> ⇒ <code>number</code></li><li><a href="#RollResults+rolls">.rolls</a> ⇒ <code>Array.&lt;RollResult&gt;</code></li><li><a href="#RollResults+rolls">.rolls</a></li><li><a href="#RollResults+value">.value</a> ⇒ <code>number</code></li><li><a href="#RollResults+addRoll">.addRoll(value)</a></li><li><a href="#RollResults+toJSON">.toJSON()</a> ⇒ <code>Object</code></li><li><a href="#RollResults+toString">.toString()</a> ⇒ <code>string</code></li></ul></li></ul><p><a name="new_RollResults_new"></a></p><h3 id="new-rollresults-rolls" tabindex="-1"><a class="header-anchor" href="#new-rollresults-rolls" aria-hidden="true">#</a> new RollResults([rolls])</h3><p>Create a <code>RollResults</code> instance.</p><p><strong>Throws</strong>:</p><ul><li><code>TypeError</code> Rolls must be an array</li></ul><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>[rolls]</td><td><code>Array.&lt;(RollResult|number)&gt;</code></td><td><code>[]</code></td><td>The roll results</td></tr></tbody></table><p><strong>Example</strong> <em>(\`RollResult\` objects)</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RollResults</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
 <span class="token keyword">new</span> <span class="token class-name">RollResult</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token keyword">new</span> <span class="token class-name">RollResult</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token keyword">new</span> <span class="token class-name">RollResult</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Example</strong> <em>(Numerical results)</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RollResults</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Example</strong> <em>(A mix)</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RollResults</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
 <span class="token keyword">new</span> <span class="token class-name">RollResult</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token number">3</span><span class="token punctuation">,</span>
 <span class="token keyword">new</span> <span class="token class-name">RollResult</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="RollResults+length"></a></p><h3 id="rollresults-length-⇒-number" tabindex="-1"><a class="header-anchor" href="#rollresults-length-⇒-number" aria-hidden="true">#</a> rollResults.length ⇒ <code>number</code></h3><p>The number of roll results.</p><p><strong>Kind</strong>: instance property of <a href="#RollResults"><code>RollResults</code></a><br><a name="RollResults+rolls"></a></p><h3 id="rollresults-rolls-⇒-array-rollresult" tabindex="-1"><a class="header-anchor" href="#rollresults-rolls-⇒-array-rollresult" aria-hidden="true">#</a> rollResults.rolls ⇒ <code>Array.&lt;RollResult&gt;</code></h3><p>List of roll results.</p><p><strong>Kind</strong>: instance property of <a href="#RollResults"><code>RollResults</code></a><br><a name="RollResults+rolls"></a></p><h3 id="rollresults-rolls" tabindex="-1"><a class="header-anchor" href="#rollresults-rolls" aria-hidden="true">#</a> rollResults.rolls</h3><p>Set the rolls.</p><p><strong>Kind</strong>: instance property of <a href="#RollResults"><code>RollResults</code></a><br><strong>Throws</strong>:</p><ul><li><code>TypeError</code> Rolls must be an array</li></ul><table><thead><tr><th>Param</th><th>Type</th></tr></thead><tbody><tr><td>rolls</td><td><code>Array.&lt;RollResult&gt;</code> | <code>Array.&lt;number&gt;</code></td></tr></tbody></table><p><a name="RollResults+value"></a></p><h3 id="rollresults-value-⇒-number" tabindex="-1"><a class="header-anchor" href="#rollresults-value-⇒-number" aria-hidden="true">#</a> rollResults.value ⇒ <code>number</code></h3><p>The total value of all the rolls after modifiers have been applied.</p><p><strong>Kind</strong>: instance property of <a href="#RollResults"><code>RollResults</code></a><br><a name="RollResults+addRoll"></a></p><h3 id="rollresults-addroll-value" tabindex="-1"><a class="header-anchor" href="#rollresults-addroll-value" aria-hidden="true">#</a> rollResults.addRoll(value)</h3><p>Add a single roll to the list.</p><p><strong>Kind</strong>: instance method of <a href="#RollResults"><code>RollResults</code></a></p><table><thead><tr><th>Param</th><th>Type</th></tr></thead><tbody><tr><td>value</td><td><code>RollResult</code> | <code>number</code></td></tr></tbody></table><p><a name="RollResults+toJSON"></a></p><h3 id="rollresults-tojson-⇒-object" tabindex="-1"><a class="header-anchor" href="#rollresults-tojson-⇒-object" aria-hidden="true">#</a> rollResults.toJSON() ⇒ <code>Object</code></h3><p>Return an object for JSON serialising.</p><p>This is called automatically when JSON encoding the object.</p><p><strong>Kind</strong>: instance method of <a href="#RollResults"><code>RollResults</code></a><br><a name="RollResults+toString"></a></p><h3 id="rollresults-tostring-⇒-string" tabindex="-1"><a class="header-anchor" href="#rollresults-tostring-⇒-string" aria-hidden="true">#</a> rollResults.toString() ⇒ <code>string</code></h3><p>Return the String representation of the object.</p><p>This is called automatically when casting the object to a string.</p><p><strong>Kind</strong>: instance method of <a href="#RollResults"><code>RollResults</code></a></p>`,48),o=[t];function r(c,p){return e(),l("div",null,o)}const d=s(n,[["render",r],["__file","RollResults.html.vue"]]);export{d as default};
