import{_ as o,r as s,o as i,c as d,a as e,d as n,b as t,e as r}from"./app-e7f8d9af.js";const c={},u=r('<h1 id="numbergenerator" tabindex="-1"><a class="header-anchor" href="#numbergenerator" aria-hidden="true">#</a> NumberGenerator</h1><h2 id="classes" tabindex="-1"><a class="header-anchor" href="#classes" aria-hidden="true">#</a> Classes</h2><dl><dt><a href="#NumberGenerator">NumberGenerator</a></dt><dd><p>The <code>NumberGenerator</code> is capable of generating random numbers.</p></dd></dl><h2 id="constants" tabindex="-1"><a class="header-anchor" href="#constants" aria-hidden="true">#</a> Constants</h2><dl><dt><a href="#maxEngine">maxEngine</a> : <code>Object</code></dt><dd><p>Engine that always returns the maximum value. Used internally for calculating max roll values.</p></dd><dt><a href="#minEngine">minEngine</a> : <code>Object</code></dt><dd><p>Engine that always returns the minimum value. Used internally for calculating min roll values.</p></dd><dt><a href="#engines">engines</a> : <code>Object</code></dt><dd><p>List of built-in number generator engines.</p></dd></dl><p><a name="NumberGenerator"></a></p><h2 id="numbergenerator-1" tabindex="-1"><a class="header-anchor" href="#numbergenerator-1" aria-hidden="true">#</a> NumberGenerator</h2><p>The <code>NumberGenerator</code> is capable of generating random numbers.</p>',8),l=e("strong",null,"Kind",-1),m=e("br",null,null,-1),p=e("strong",null,"See",-1),h={href:"https://github.com/ckknight/random-js",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/ckknight/random-js#engines",target:"_blank",rel:"noopener noreferrer"},b=e("br",null,null,-1),x=e("strong",null,"Since",-1),v=r(`<ul><li><a href="#NumberGenerator">NumberGenerator</a><ul><li><a href="#new_NumberGenerator_new">new NumberGenerator([engine])</a></li><li><a href="#NumberGenerator+engine">.engine</a> ⇒ <code>Engine</code> | <code>Object</code></li><li><a href="#NumberGenerator+engine">.engine</a></li><li><a href="#NumberGenerator+integer">.integer(min, max)</a> ⇒ <code>number</code></li><li><a href="#NumberGenerator+real">.real(min, max, [inclusive])</a> ⇒ <code>number</code></li></ul></li></ul><p><a name="new_NumberGenerator_new"></a></p><h3 id="new-numbergenerator-engine" tabindex="-1"><a class="header-anchor" href="#new-numbergenerator-engine" aria-hidden="true">#</a> new NumberGenerator([engine])</h3><p>Create a <code>NumberGenerator</code> instance.</p><p>The <code>engine</code> can be any object that has a <code>next()</code> method, which returns a number.</p><p><strong>Throws</strong>:</p><ul><li><code>TypeError</code> engine must have function <code>next()</code></li></ul><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>[engine]</td><td><code>Engine</code> | <code>Object</code></td><td><code>nativeMath</code></td><td>The RNG engine to use</td></tr></tbody></table><p><strong>Example</strong> <em>(Built-in engine)</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">NumberGenerator</span><span class="token punctuation">(</span>engines<span class="token punctuation">.</span>nodeCrypto<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Example</strong> <em>(Custom engine)</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">NumberGenerator</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// return a random number</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="NumberGenerator+engine"></a></p><h3 id="numbergenerator-engine-⇒-engine-object" tabindex="-1"><a class="header-anchor" href="#numbergenerator-engine-⇒-engine-object" aria-hidden="true">#</a> numberGenerator.engine ⇒ <code>Engine</code> | <code>Object</code></h3><p>The current engine.</p><p><strong>Kind</strong>: instance property of <a href="#NumberGenerator"><code>NumberGenerator</code></a><br><a name="NumberGenerator+engine"></a></p><h3 id="numbergenerator-engine" tabindex="-1"><a class="header-anchor" href="#numbergenerator-engine" aria-hidden="true">#</a> numberGenerator.engine</h3><p>Set the engine.</p><p>The <code>engine</code> can be any object that has a <code>next()</code> method, which returns a number.</p><p><strong>Kind</strong>: instance property of <a href="#NumberGenerator"><code>NumberGenerator</code></a><br><strong>Throws</strong>:</p><ul><li><code>TypeError</code> engine must have function <code>next()</code></li></ul><p><strong>See</strong>: <a href="#engines">engines</a></p><table><thead><tr><th>Param</th><th>Type</th></tr></thead><tbody><tr><td>engine</td><td><code>Engine</code> | <code>Object</code></td></tr></tbody></table><p><strong>Example</strong> <em>(Built-in engine)</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>numberGenerator<span class="token punctuation">.</span>engine <span class="token operator">=</span> engines<span class="token punctuation">.</span>nodeCrypto<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Example</strong> <em>(Custom engine)</em></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>numberGenerator<span class="token punctuation">.</span>engine <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// return a random number</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a name="NumberGenerator+integer"></a></p><h3 id="numbergenerator-integer-min-max-⇒-number" tabindex="-1"><a class="header-anchor" href="#numbergenerator-integer-min-max-⇒-number" aria-hidden="true">#</a> numberGenerator.integer(min, max) ⇒ <code>number</code></h3><p>Generate a random integer within the inclusive range <code>[min, max]</code>.</p><p><strong>Kind</strong>: instance method of <a href="#NumberGenerator"><code>NumberGenerator</code></a><br><strong>Returns</strong>: <code>number</code> - The random integer</p><table><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>min</td><td><code>number</code></td><td>The minimum integer value, inclusive.</td></tr><tr><td>max</td><td><code>number</code></td><td>The maximum integer value, inclusive.</td></tr></tbody></table><p><a name="NumberGenerator+real"></a></p><h3 id="numbergenerator-real-min-max-inclusive-⇒-number" tabindex="-1"><a class="header-anchor" href="#numbergenerator-real-min-max-inclusive-⇒-number" aria-hidden="true">#</a> numberGenerator.real(min, max, [inclusive]) ⇒ <code>number</code></h3><p>Returns a floating-point value within <code>[min, max)</code> or <code>[min, max]</code>.</p><p><strong>Kind</strong>: instance method of <a href="#NumberGenerator"><code>NumberGenerator</code></a><br><strong>Returns</strong>: <code>number</code> - The random floating-point value</p><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>min</td><td><code>number</code></td><td></td><td>The minimum floating-point value, inclusive.</td></tr><tr><td>max</td><td><code>number</code></td><td></td><td>The maximum floating-point value.</td></tr><tr><td>[inclusive]</td><td><code>boolean</code></td><td><code>false</code></td><td>If <code>true</code>, <code>max</code> will be inclusive.</td></tr></tbody></table><p><a name="maxEngine"></a></p><h2 id="maxengine-object" tabindex="-1"><a class="header-anchor" href="#maxengine-object" aria-hidden="true">#</a> maxEngine : <code>Object</code></h2><p>Engine that always returns the maximum value. Used internally for calculating max roll values.</p><p><strong>Kind</strong>: global constant<br><strong>Since</strong>: 4.2.0</p><ul><li><a href="#maxEngine">maxEngine</a> : <code>Object</code><ul><li><a href="#maxEngine.range">.range</a> : <code>Array.&lt;number&gt;</code></li><li><a href="#maxEngine.next">.next()</a> ⇒ <code>number</code></li></ul></li></ul><p><a name="maxEngine.range"></a></p><h3 id="maxengine-range-array-number" tabindex="-1"><a class="header-anchor" href="#maxengine-range-array-number" aria-hidden="true">#</a> maxEngine.range : <code>Array.&lt;number&gt;</code></h3><p>The min / max number range (e.g. <code>[1, 10]</code>).</p><p>This <em>must</em> be set for the <code>next()</code> method to return the correct last index.</p><p><strong>Kind</strong>: static property of <a href="#maxEngine"><code>maxEngine</code></a><br><strong>Example</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>maxEngine<span class="token punctuation">.</span>range <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a name="maxEngine.next"></a></p><h3 id="maxengine-next-⇒-number" tabindex="-1"><a class="header-anchor" href="#maxengine-next-⇒-number" aria-hidden="true">#</a> maxEngine.next() ⇒ <code>number</code></h3><p>Returns the maximum number index for the range</p><p><strong>Kind</strong>: static method of <a href="#maxEngine"><code>maxEngine</code></a><br><a name="minEngine"></a></p><h2 id="minengine-object" tabindex="-1"><a class="header-anchor" href="#minengine-object" aria-hidden="true">#</a> minEngine : <code>Object</code></h2><p>Engine that always returns the minimum value. Used internally for calculating min roll values.</p><p><strong>Kind</strong>: global constant<br><strong>Since</strong>: 4.2.0<br><a name="minEngine.next"></a></p><h3 id="minengine-next-⇒-number" tabindex="-1"><a class="header-anchor" href="#minengine-next-⇒-number" aria-hidden="true">#</a> minEngine.next() ⇒ <code>number</code></h3><p>Returns the minimum number index, <code>0</code></p><p><strong>Kind</strong>: static method of <a href="#minEngine"><code>minEngine</code></a><br><a name="engines"></a></p><h2 id="engines-object" tabindex="-1"><a class="header-anchor" href="#engines-object" aria-hidden="true">#</a> engines : <code>Object</code></h2><p>List of built-in number generator engines.</p>`,60),f=e("strong",null,"Kind",-1),k=e("br",null,null,-1),_=e("strong",null,"See",-1),E={href:"https://github.com/ckknight/random-js",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/ckknight/random-js#engines",target:"_blank",rel:"noopener noreferrer"},G=e("br",null,null,-1),N=e("strong",null,"Since",-1);function y(T,w){const a=s("ExternalLinkIcon");return i(),d("div",null,[u,e("p",null,[l,n(": global class"),m,p,n(": This uses "),e("a",h,[n("random-js"),t(a)]),n(". For details of the engines, check the "),e("a",g,[n("documentation"),t(a)]),n("."),b,x,n(": 4.2.0")]),v,e("p",null,[f,n(": global constant"),k,_,n(": This uses "),e("a",E,[n("random-js"),t(a)]),n(". For details of the engines, check the "),e("a",j,[n("documentation"),t(a)]),n("."),G,N,n(": 4.2.0")])])}const O=o(c,[["render",y],["__file","NumberGenerator.html.vue"]]);export{O as default};
