import{_ as e,o as d,c as o,e as c}from"./app-e7f8d9af.js";const r={},t=c('<h1 id="fudgedice" tabindex="-1"><a class="header-anchor" href="#fudgedice" aria-hidden="true">#</a> FudgeDice</h1><p><a name="FudgeDice"></a></p><h2 id="fudgedice-⇐-standarddice" tabindex="-1"><a class="header-anchor" href="#fudgedice-⇐-standarddice" aria-hidden="true">#</a> FudgeDice ⇐ <code>StandardDice</code></h2><p>Represents a Fudge / Fate type die.</p><p><strong>Kind</strong>: global class<br><strong>Extends</strong>: <code>StandardDice</code></p><ul><li><a href="#FudgeDice">FudgeDice</a> ⇐ <code>StandardDice</code><ul><li><a href="#new_FudgeDice_new">new FudgeDice([nonBlanks], [qty], [modifiers], [description])</a></li><li><a href="#FudgeDice+name">.name</a> ⇒ <code>string</code></li><li><a href="#FudgeDice+nonBlanks">.nonBlanks</a> ⇒ <code>number</code></li><li><a href="#FudgeDice+sides">.sides</a> ⇒ <code>string</code></li><li><a href="#FudgeDice+rollOnce">.rollOnce()</a> ⇒ <code>RollResult</code></li></ul></li></ul><p><a name="new_FudgeDice_new"></a></p><h3 id="new-fudgedice-nonblanks-qty-modifiers-description" tabindex="-1"><a class="header-anchor" href="#new-fudgedice-nonblanks-qty-modifiers-description" aria-hidden="true">#</a> new FudgeDice([nonBlanks], [qty], [modifiers], [description])</h3><p>Create a <code>FudgeDice</code> instance.</p><p><strong>Throws</strong>:</p><ul><li><code>RangeError</code> nonBlanks must be 1 or 2</li><li><code>TypeError</code> modifiers must be valid</li></ul><table><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>[nonBlanks]</td><td><code>number</code></td><td><code>2</code></td><td>The number of sides each symbol should cover (<code>1</code> or <code>2</code>)</td></tr><tr><td>[qty]</td><td><code>number</code></td><td><code>1</code></td><td>The number of dice to roll (e.g. <code>4</code>)</td></tr><tr><td>[modifiers]</td><td><code>Map.&lt;string, Modifier&gt;</code> | <code>Array.&lt;Modifier&gt;</code> | <code>Object</code> | <code>null</code></td><td><code></code></td><td>The modifiers that affect the die</td></tr><tr><td>[description]</td><td><code>Description</code> | <code>string</code> | <code>null</code></td><td><code></code></td><td>The roll description.</td></tr></tbody></table><p><a name="FudgeDice+name"></a></p><h3 id="fudgedice-name-⇒-string" tabindex="-1"><a class="header-anchor" href="#fudgedice-name-⇒-string" aria-hidden="true">#</a> fudgeDice.name ⇒ <code>string</code></h3><p>The name of the die.</p><p><strong>Kind</strong>: instance property of <a href="#FudgeDice"><code>FudgeDice</code></a><br><strong>Returns</strong>: <code>string</code> - &#39;fudge&#39;<br><a name="FudgeDice+nonBlanks"></a></p><h3 id="fudgedice-nonblanks-⇒-number" tabindex="-1"><a class="header-anchor" href="#fudgedice-nonblanks-⇒-number" aria-hidden="true">#</a> fudgeDice.nonBlanks ⇒ <code>number</code></h3><p>The number of sides that each symbol (+, -) covers.</p><p><strong>Kind</strong>: instance property of <a href="#FudgeDice"><code>FudgeDice</code></a><br><strong>Returns</strong>: <code>number</code> - <code>1</code> or <code>2</code><br><a name="FudgeDice+sides"></a></p><h3 id="fudgedice-sides-⇒-string" tabindex="-1"><a class="header-anchor" href="#fudgedice-sides-⇒-string" aria-hidden="true">#</a> fudgeDice.sides ⇒ <code>string</code></h3><p>The number of sides the die has.</p><p><strong>Kind</strong>: instance property of <a href="#FudgeDice"><code>FudgeDice</code></a><br><strong>Returns</strong>: <code>string</code> - &#39;F.2&#39; or &#39;F.1&#39;<br><a name="FudgeDice+rollOnce"></a></p><h3 id="fudgedice-rollonce-⇒-rollresult" tabindex="-1"><a class="header-anchor" href="#fudgedice-rollonce-⇒-rollresult" aria-hidden="true">#</a> fudgeDice.rollOnce() ⇒ <code>RollResult</code></h3><p>Roll a single die and return the value.</p><p><strong>Kind</strong>: instance method of <a href="#FudgeDice"><code>FudgeDice</code></a><br><strong>Returns</strong>: <code>RollResult</code> - The value rolled</p>',25),n=[t];function i(a,s){return d(),o("div",null,n)}const u=e(r,[["render",i],["__file","FudgeDice.html.vue"]]);export{u as default};
